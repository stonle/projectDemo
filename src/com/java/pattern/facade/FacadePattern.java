package com.java.pattern.facade;

/**
 * Facade : 外观模式
 * 定义：要求一个子系统的外部与内部的通信必须通过一个统一的对象进行，
 * 外观模式提供一个高层次的接口，使得子系统更易于使用。（其实就是封装，用于解决类与类间的依赖关系）
 *
 * Facade：外观角色，客户端可以调用他的方法，在外观角色
 * 中可以知道相关子系统的功能和责任；在正常情况下，它将所有从客户
 * 端发来的请求委派到相应的子系统去，传递给相应的子系统对象处理。
 *
 * Subsystem：子系统角色，实现子系统的功能，处理外观类
 * 指派的任务，注意子系统类不含有外观类的引用
 * Created by Administrator on 2017/11/9.
 */
public class FacadePattern {
}
